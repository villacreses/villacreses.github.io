import t from"./mv-countdown-ent.js";import e from"./mv-countdown.js";export default class n extends t{static elementTag="mv-countdown-form";static counterContainer=document.getElementById("counter-container");static eventName={ADD_COUNTDOWN:"addcountdown"};constructor(){super(),this.setTimestamp=this.setTimestamp.bind(this),this.reset=this.reset.bind(this)}reset(){this.querySelector("form").reset(),this.setTimestamp(new Date(Date.now()))}init(){this.innerHTML='\n      <form>\n        <h3>Create a countdown</h3>\n        <div class="container">\n          <input type="text" name="label" title="Counter label" maxlength="25" minlength="3" required />\n          <div class="datetime">\n            <input type="date" name="date" title="Pick a date" />\n            <input type="time" name="time" title="Select a time">\n          </div>\n        </div>\n        <button id="add-counter" type="submit">Add counter</button>\n      </form>\n    ';const t=this.querySelector("form");t.addEventListener("submit",i=>{i.preventDefault();const a=Object.fromEntries(new FormData(t).entries());this.reset();const r=n.dateFromFormData(a);new e(r,a.label)}),this.dateInput=this.querySelector("input[name=date]"),this.timeInput=this.querySelector("input[name=time]"),this.setTimestamp(new Date(Date.now()))}setTimestamp(t){this.timeInput.value=n.buildTimestring(t),this.dateInput.value=n.buildDatestring(t)}static dateFromFormData({date:t,time:e}){const[n,i,a]=t.split("-").map(Number),[r,s]=e.split(":").map(Number);return new Date(n,i-1,a,r,s)}static buildDatestring(t){return[t.getFullYear(),String(t.getMonth()+1).padStart(2,"0"),String(t.getDate()).padStart(2,"0")].join("-")}static buildTimestring(t){return`${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}`}}