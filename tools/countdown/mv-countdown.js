import t from"./mv-countdown-ent.js";const e=(t=6)=>`counter-${Math.random().toString(36).substring(2,t+2)}`;export default class o extends t{static elementTag="mv-countdown";static eventName={DELETE_COUNTDOWN:"deletecountdown"};static template=document.querySelector("template#counter");static container=document.getElementById("counter-container");constructor(t,o){super(),this.cloneTemplateAndGetNodes(),this.startTime=t,this.title=o,this.id=e(),this.setupCounterButtonActions()}cloneTemplateAndGetNodes(){const t=o.template.content.cloneNode(!0);this.titleNode=t.querySelector(".label"),this.footerNode=t.querySelector(".post-label"),this.elapsedNode=t.querySelector(".elapsed"),this.appendChild(t),o.container.appendChild(this)}setupCounterButtonActions(){this.id;this.querySelector("button.delete").addEventListener("click",()=>{this.delete()})}delete(){this.remove()}get title(){return this.titleNode.textContent}set title(t){this.titleNode.textContent=t}set startTime(t){this._startTime=t,this.footerNode.textContent=`since ${t.toLocaleString()}`}get startTime(){return this._startTime}set timeElapsed(t){this.elapsedNode.textContent=t,t.length>20?this.toggleAttribute("long-datestring",!0):this.toggleAttribute("long-datestring",!1)}updateElapsedTime(t){const e=Math.floor((t-this.startTime)/1e3),o={d:Math.floor(e/86400),h:Math.floor(e/3600)%24,m:Math.floor(e/60)%60,s:e%60},s=Object.entries(o).filter(([t,e])=>e).map(([t,e])=>`${e} ${t}`).join(" ");this.timeElapsed=s}}