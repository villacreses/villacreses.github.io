import e from"./mv-boolean-toggle.js";const s="data-mv-theme";class t extends e{static get inputId(){return"mv-dark-toggle"}get uncheckedClass(){return"fa-solid fa-sun"}get checkedClass(){return"fa-solid fa-moon"}get accessibleTextContent(){return"Toggle dark mode"}constructor(){super();const e=t.userPrefersDark();this.input.checked=e;document.documentElement.classList.add(e?"dark-mode":"light-mode"),this.syncAcrossSessions()}static userPrefersDark(){const e=sessionStorage.getItem(s)||null;return"DARK"===e||null===e&&window.matchMedia("(prefers-color-scheme: dark)").matches}static _storeThemeInSession(e){sessionStorage.setItem(s,e?"DARK":"LIGHT")}syncAcrossSessions(){window.addEventListener("storage",e=>{e.key===s&&this.syncCheckState("DARK"===e.newValue)}),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",e=>{this.syncCheckState(e.matches)})}onCheckedStateChange(e){t._storeThemeInSession(e),this._updateRootClass(e)}_updateRootClass(e){const s=document.documentElement;s.classList.remove("light-mode","dark-mode"),s.classList.add(e?"dark-mode":"light-mode")}}export default{register:()=>{customElements.define(t.inputId,t)},onpageshow:()=>{const e=t.userPrefersDark(),s=document.querySelector(`${t.inputId} input`);s.checked!==e&&s.click()}};