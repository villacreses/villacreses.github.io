import e from"./mv-boolean-toggle.js";const s="data-mv-theme";class t extends e{static get inputId(){return"mv-dark-toggle"}get uncheckedClass(){return"fa-solid fa-sun"}get checkedClass(){return"fa-solid fa-moon"}get accessibleTextContent(){return"Toggle dark mode"}constructor(){super();const e=t.userPrefersDark();this.input.checked=e,t.rootClass=e,this.syncAcrossSessions()}static get storedTheme(){return sessionStorage.getItem(s)||null}static set storedTheme(e){sessionStorage.setItem(s,e?"DARK":"LIGHT")}static set rootClass(e){const s=document.documentElement;s.classList.remove("light-mode","dark-mode"),s.classList.add(e?"dark-mode":"light-mode")}static userPrefersDark(){const{storedTheme:e}=t;return"DARK"===e||null===e&&window.matchMedia("(prefers-color-scheme: dark)").matches}syncAcrossSessions(){window.addEventListener("storage",e=>{e.key===s&&(this.checked="DARK"===e.newValue)}),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",e=>{this.checked=e.matches})}onCheckedStateChange(){t.storedTheme=this.checked,t.rootClass=this.checked}}export default{register:t.register.bind(t),onpageshow:()=>{const e=t.userPrefersDark(),s=document.querySelector(`${t.inputId} input`);s.checked!==e&&s.click()}};