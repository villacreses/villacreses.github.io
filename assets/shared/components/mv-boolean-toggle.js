export default class e extends HTMLElement{constructor(){super(),this.buildElements(),this.attachListeners()}static get inputId(){return"boolean-toggle-input"}get uncheckedClass(){return""}get checkedClass(){return""}get accessibleTextContent(){return""}get checked(){return this.input.checked}set checked(e){this.input.checked!==e&&this.input.click()}static register(){customElements.define(this.inputId,this)}buildElements(){this.classList.add("boolean-toggle"),this.innerHTML=`\n      <input type="checkbox" hidden id="${this.constructor.inputId}">\n      <label for="${this.constructor.inputId}" role="button" tabindex="0" aria-label="${this.accessibleTextContent}">\n        <i class="${this.uncheckedClass} unchecked" aria-hidden="true"></i>\n        <i class="${this.checkedClass} checked" aria-hidden="true"></i>\n        <span class="sr-only">${this.accessibleTextContent}</span>\n      </label>\n    `,this.input=this.querySelector("input"),this.label=this.querySelector("label")}attachListeners(){this.input.addEventListener("change",this.onCheckedStateChange),this.label.addEventListener("keydown",e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),this.input.click())})}onCheckedStateChange(e){}}